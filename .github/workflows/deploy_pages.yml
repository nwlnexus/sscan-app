name: 'Deploy Pages'

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


env:
  PAGES_APPS_DIR: ./pages_apps

jobs:
  check_org:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'nwlnexus'
    steps:
      - name: üîç Check organization
        run: echo "Running workflow for NWL Nexus organization"

  determine_env:
    runs-on: ubuntu-latest
    outputs:
      determined_env: ${{ steps.set_env.outputs.env }}
    steps:
      - name: üîç Determine environment
        id: set_env
        run: |
          if [[ ${{ github.ref }} == "refs/heads/release" ]]; then
            echo "Environment: production"
            echo "env=PROD" >> $GITHUB_OUTPUT
          else
            echo "Environment: development"
            echo "env=DEV" >> $GITHUB_OUTPUT
          fi

  find_pages_apps:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.apps.outputs.folders }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - id: apps
        uses: kmanimaran/list-folder-action@v4
        with:
          path: ${{ env.PAGES_APPS_DIR }}


  deploy:
    name: Deploy Pages applications
    needs: [determine_env, check_org, find_pages_apps]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    strategy:
      matrix:
        app: ${{ fromJSON(needs.find_pages_apps.outputs.folders) }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üîß Setup
        uses: ./tooling/github/setup
        with:
          op_service_account_token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: üîê Load secrets
        id: load_secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CLOUDFLARE_API_TOKEN: op://h2apd5x5ncu6djh6svr3lcr25a/jwis7zcfc2tcrvm4qxsw4mhknu/api_token
          CLOUDFLARE_ACCOUNT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/jwis7zcfc2tcrvm4qxsw4mhknu/account_id
          VITE_SESSION_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/session_secret
          DATABASE_URL: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/DATABASE_URL
          AUTH0_DOMAIN: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/AUTH0_DOMAIN
          AUTH0_CLIENT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/AUTH0_CLIENT_ID
          AUTH0_CLIENT_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/AUTH0_CLIENT_SECRET
          GOOGLE_CLIENT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/GOOGLE_CLIENT_ID
          GOOGLE_CLIENT_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/GOOGLE_CLIENT_SECRET
          APP_URL: op://h2apd5x5ncu6djh6svr3lcr25a/u2djddditxramzdmcemimb4lbq/${{ needs.determine_env.outputs.determined_env }}/APP_URL

      - name: üìù Run migrations
        run: pnpm run db:migrate

      - name: üì¶ Build
        working-directory: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}
        run: pnpm run build

      - name: üìù Read app name
        id: read_toml
        uses: SebRollen/toml-action@v1.2.0
        with:
          file: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}/wrangler.toml
          field: 'name'

      - name: üöÄ Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ steps.read_toml.outputs.value }}
          directory: ./build/client
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}
          wranglerVersion: '3'
