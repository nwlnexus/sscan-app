name: 'Deploy Pages'

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PAGES_APPS_DIR: ./pages_apps

jobs:
  check_org:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'nwlnexus'
    steps:
      - name: üîç Check organization
        run: echo "Running workflow for NWL Nexus organization"

  determine_env:
    runs-on: ubuntu-latest
    outputs:
      determined_env: ${{ steps.set_env.outputs.env }}
    steps:
      - name: üîç Determine environment
        id: set_env
        run: |
          if [[ ${{ github.ref }} == "refs/heads/release" ]]; then
            echo "Environment: production"
            echo "env=PROD" >> $GITHUB_OUTPUT
          else
            echo "Environment: development"
            echo "env=DEV" >> $GITHUB_OUTPUT
          fi

  find_pages_apps:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.apps.outputs.folders }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - id: apps
        uses: kmanimaran/list-folder-action@v4
        with:
          path: ${{ env.PAGES_APPS_DIR }}

  deploy:
    name: Deploy Pages applications
    needs: [determine_env, find_pages_apps]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    strategy:
      matrix:
        app: ${{ fromJSON(needs.find_pages_apps.outputs.folders) }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üîß Setup
        uses: ./tooling/github/setup
        with:
          op_service_account_token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: üìù Read app name
        id: read_toml
        uses: SebRollen/toml-action@v1.2.0
        with:
          file: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}/wrangler.toml
          field: 'name'

      - name: üîê Load secrets
        id: load_secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CLOUDFLARE_API_TOKEN: op://h2apd5x5ncu6djh6svr3lcr25a/jwis7zcfc2tcrvm4qxsw4mhknu/global_key
          CLOUDFLARE_API_EMAIL: op://h2apd5x5ncu6djh6svr3lcr25a/jwis7zcfc2tcrvm4qxsw4mhknu/email
          CLOUDFLARE_ACCOUNT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/jwis7zcfc2tcrvm4qxsw4mhknu/account_id
          VITE_SESSION_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/session_secret
          DATABASE_URL: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/DATABASE_URL
          AUTH0_DOMAIN: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/AUTH0_DOMAIN
          AUTH0_CLIENT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/AUTH0_CLIENT_ID
          AUTH0_CLIENT_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/AUTH0_CLIENT_SECRET
          GOOGLE_CLIENT_ID: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/GOOGLE_CLIENT_ID
          GOOGLE_CLIENT_SECRET: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/GOOGLE_CLIENT_SECRET
          APP_URL: op://h2apd5x5ncu6djh6svr3lcr25a/${{ steps.read_toml.outputs.value }}/${{ needs.determine_env.outputs.determined_env }}/APP_URL

      - name: üìù Run migrations
        run: pnpm run db:migrate
        env:
          DATABASE_URL: ${{ steps.load_secrets.outputs.DATABASE_URL }}

      - name: üì¶ Build
        working-directory: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}
        run: pnpm run build

      - name: Deploy secrets for pages app
        id: deploy_secrets
        uses: nwlnexus/cf-pages-secrets@v1.3.0
        env:
          VITE_SESSION_SECRET: ${{ steps.load_secrets.outputs.VITE_SESSION_SECRET }}
          DATABASE_URL: ${{ steps.load_secrets.outputs.DATABASE_URL }}
          AUTH0_DOMAIN: ${{ steps.load_secrets.outputs.AUTH0_DOMAIN }}
          AUTH0_CLIENT_ID: ${{ steps.load_secrets.outputs.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ steps.load_secrets.outputs.AUTH0_CLIENT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ steps.load_secrets.outputs.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ steps.load_secrets.outputs.GOOGLE_CLIENT_SECRET }}
          APP_URL: ${{ steps.load_secrets.outputs.APP_URL }}
        with:
          apiEmail: ${{ steps.load_secrets.outputs.CLOUDFLARE_API_EMAIL }}
          apiToken: ${{ steps.load_secrets.outputs.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ steps.load_secrets.outputs.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ steps.read_toml.outputs.value }}
          createProject: true
          productionBranch: 'release'
          wranglerConfigPath: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}/wrangler.toml
          secrets: |-
            VITE_SESSION_SECRET
            DATABASE_URL
            AUTH0_DOMAIN
            AUTH0_CLIENT_ID
            AUTH0_CLIENT_SECRET
            GOOGLE_CLIENT_ID
            GOOGLE_CLIENT_SECRET
            APP_URL

      - name: üöÄ Deploy to Cloudflare Pages
        if: ${{ !env.ACT }}
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ steps.load_secrets.outputs.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ steps.load_secrets.outputs.CLOUDFLARE_ACCOUNT_ID }}
          packageManager: pnpm
          command: pages deploy ./build/client --project-name=${{ steps.read_toml.outputs.value }} --branch=${{ github.ref_name }}
          workingDirectory: ${{ env.PAGES_APPS_DIR }}/${{ matrix.app }}

      - name: üìù Print deployment-url
        if: ${{ !env.ACT }}
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
        run: echo $DEPLOYMENT_URL
